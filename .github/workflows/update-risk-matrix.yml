name: Update Risk Matrix Data

on:
  schedule:
    - cron: '30 22 * * 1-5'  # Â∑•‰ΩúÊó•Âåó‰∫¨Êó∂Èó¥ 6:30
  workflow_dispatch:  # ÊâãÂä®Ëß¶Âèë

jobs:
  update-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r scripts/requirements.txt

      - name: Setup V2Ray Proxy for Data Collection
        run: |
          # ‰∏ãËΩΩÂπ∂ÂÆâË£Ö V2Ray
          curl -L -o v2ray-linux.zip https://github.com/v2fly/v2ray-core/releases/latest/download/v2ray-linux-64.zip
          unzip v2ray-linux.zip -d v2ray
          chmod +x v2ray/v2ray
          
          # ÂàõÂª∫ V2Ray ÈÖçÁΩÆÊñá‰ª∂
          cat > v2ray/config.json << EOF
          {
            "inbounds": [
              {
                "port": 1080,
                "protocol": "socks",
                "settings": {
                  "auth": "noauth",
                  "udp": true
                }
              }
            ],
            "outbounds": [
              {
                "protocol": "vmess",
                "settings": {
                  "vnext": [
                    {
                      "address": "${{ secrets.VMESS_HOST }}",
                      "port": ${{ secrets.VMESS_PORT }},
                      "users": [
                        {
                          "id": "${{ secrets.VMESS_UUID }}",
                          "alterId": ${{ secrets.VMESS_ALTERID }},
                          "security": "auto"
                        }
                      ]
                    }
                  ]
                },
                "streamSettings": {
                  "network": "${{ secrets.VMESS_NETWORK }}",
                  "security": "none"
                }
              }
            ]
          }
          EOF
          
          # ÂêØÂä® V2Ray Ôºà‰ΩøÁî®Ê≠£Á°ÆÁöÑÂëΩ‰ª§Ê†ºÂºèÔºâ
          ./v2ray/v2ray run -config v2ray/config.json > v2ray.log 2>&1 &
          V2RAY_PID=$!
          echo "V2RAY_PID=$V2RAY_PID" >> $GITHUB_ENV
          
          # Á≠âÂæÖ V2Ray ÂêØÂä®
          echo "‚è±Ô∏è Á≠âÂæÖV2RayÂêØÂä®..."
          sleep 10
          
          # Ê£ÄÊü•V2RayËøõÁ®ãÊòØÂê¶ËøòÂú®ËøêË°å
          if ps -p $V2RAY_PID > /dev/null; then
              echo "‚úÖ V2RayËøõÁ®ãËøêË°åÊ≠£Â∏∏ (PID: $V2RAY_PID)"
          else
              echo "‚ùå V2RayËøõÁ®ãÂ∑≤ÈÄÄÂá∫ÔºåÊü•ÁúãÊó•Âøó:"
              cat v2ray.log
              exit 1
          fi
          
          # ÊµãËØï‰ª£ÁêÜËøûÊé•
          echo "üîÑ ÊµãËØï‰ª£ÁêÜËøûÊé•..."
          for i in {1..3}; do
              if curl --socks5 127.0.0.1:1080 --connect-timeout 10 https://httpbin.org/ip; then
                  echo "‚úÖ ‰ª£ÁêÜËøûÊé•ÊµãËØïÊàêÂäü"
                  break
              else
                  echo "‚ö†Ô∏è Á¨¨${i}Ê¨°‰ª£ÁêÜÊµãËØïÂ§±Ë¥•ÔºåÁ≠âÂæÖ5ÁßíÂêéÈáçËØï..."
                  sleep 5
                  if [ $i -eq 3 ]; then
                      echo "‚ùå ‰ª£ÁêÜËøûÊé•ÊµãËØïÂ§±Ë¥•ÔºåÊü•ÁúãV2RayÊó•Âøó:"
                      cat v2ray.log
                      # ‰∏çÈÄÄÂá∫ÔºåÁªßÁª≠ÊâßË°åÊï∞ÊçÆÊî∂ÈõÜ
                  fi
              fi
          done

      - name: Create data directory
        run: |
          mkdir -p data

      - name: Calculate Risk Matrix Data (with proxy)
        env:
          USE_PROXY: "true"
          PROXY_HOST: "127.0.0.1"
          PROXY_PORT: "1080"
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
        run: |
          python scripts/risk_matrix_calculator.py

      - name: Stop V2Ray Proxy
        run: |
          if [ ! -z "$V2RAY_PID" ]; then
            kill $V2RAY_PID 2>/dev/null || true
            echo "üõë V2Ray‰ª£ÁêÜÂ∑≤ÂÅúÊ≠¢"
          fi

      - name: Upload to Tencent Cloud COS (direct connection)
        env:
          TENCENT_SECRET_ID: ${{ secrets.TENCENT_SECRET_ID }}
          TENCENT_SECRET_KEY: ${{ secrets.TENCENT_SECRET_KEY }}
          COS_BUCKET_NAME: ${{ secrets.COS_BUCKET_NAME }}
          COS_REGION: ${{ secrets.COS_REGION }}
          USE_PROXY: "false"
        run: |
          python scripts/data_uploader.py

      - name: Archive logs and data
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: execution-logs
          path: |
            data/
            v2ray.log
          retention-days: 7
